WITH FRONTEND_CODES AS (
  SELECT SUM(CODE) AS FRONTEND_SUM
  FROM SKILLCODES
  WHERE CATEGORY = 'Front End'
),
PYTHON_CODE AS (
  SELECT CODE AS PYTHON_CODE
  FROM SKILLCODES
  WHERE NAME = 'Python'
),
CSHARP_CODE AS (
  SELECT CODE AS CSHARP_CODE
  FROM SKILLCODES
  WHERE NAME = 'C#'
)
SELECT
  CASE
    WHEN (d.SKILL_CODE & p.PYTHON_CODE > 0) AND (d.SKILL_CODE & f.FRONTEND_SUM > 0) THEN 'A'
    WHEN (d.SKILL_CODE & c.CSHARP_CODE > 0) THEN 'B'
    WHEN (d.SKILL_CODE & f.FRONTEND_SUM > 0)
         AND (d.SKILL_CODE & p.PYTHON_CODE = 0)
         AND (d.SKILL_CODE & c.CSHARP_CODE = 0) THEN 'C'
  END AS GRADE,
  d.ID,
  d.EMAIL
FROM DEVELOPERS d
CROSS JOIN FRONTEND_CODES f
CROSS JOIN PYTHON_CODE p
CROSS JOIN CSHARP_CODE c
WHERE
  ((d.SKILL_CODE & p.PYTHON_CODE > 0) AND (d.SKILL_CODE & f.FRONTEND_SUM > 0))
  OR (d.SKILL_CODE & c.CSHARP_CODE > 0)
  OR ((d.SKILL_CODE & f.FRONTEND_SUM > 0)
      AND (d.SKILL_CODE & p.PYTHON_CODE = 0)
      AND (d.SKILL_CODE & c.CSHARP_CODE = 0))
ORDER BY GRADE, d.ID;
